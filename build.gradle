buildscript {
  repositories {
    mavenCentral()
    maven { url 'https://s01.oss.sonatype.org' }
    gradlePluginPortal()
    mavenLocal()
    google()
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
    maven { url 'https://s01.oss.sonatype.org/content/repositories/snapshots/' }
  }
  dependencies {}
}

allprojects {
  apply plugin: 'eclipse'
  apply plugin: 'idea'
  // 这允许您“使用IntelliJ IDEA构建和运行”，这是IDEA设置中的一个选项。
  idea {
    module {
      outputDir file('build/classes/java/main')
      testOutputDir file('build/classes/java/test')
    }
  }
}

configure(subprojects) {
  apply plugin: 'java-library'
  sourceCompatibility = 23

  // From https://lyze.dev/2021/04/29/libGDX-Internal-Assets-List/
  // The article can be helpful when using assets.txt in your project.
  // 从https://lyze.dev/2021/04/29/libGDX-Internal-Assets-List/
  // 在项目中使用assets.txt时，这篇文章可能会有所帮助。
  tasks.register('generateAssetList') {
    inputs.dir("${project.rootDir}/assets/")
    // projectFolder/assets
    File assetsFolder = new File("${project.rootDir}/assets/")
    // projectFolder/assets/assets.txt
    File assetsFile = new File(assetsFolder, "assets.txt")
    // delete that file in case we've already created it
    assetsFile.delete()

    // iterate through all files inside that folder
    // convert it to a relative path
    // and append it to the file assets.txt
    fileTree(assetsFolder).collect { assetsFolder.relativePath(it) }.sort().each {
      assetsFile.append(it + "\n")
    }
  }
  processResources.dependsOn 'generateAssetList'

  compileJava {
    options.incremental = true
  }
}

subprojects {
  version = '$projectVersion'
  ext.appName = 'Galactic Dogfight'

  repositories {
    mavenCentral()
    maven { url 'https://s01.oss.sonatype.org' }
    // 如果下载依赖项时出错，您可能需要删除以下行。
    mavenLocal()
    google()
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
    maven { url 'https://s01.oss.sonatype.org/content/repositories/snapshots/' }
    maven { url 'https://jitpack.io' }  // 添加JitPack仓库
    maven {
      url = uri("http://maven.snowlyicewolf.club")
      allowInsecureProtocol = true
    }
  }
  dependencies {
    // 请无视报错（）
    implementation "space.earlygrey:shapedrawer:$shapedrawerVersion"  // 添加依赖项

    compileOnly("org.jetbrains:annotations:26.0.2")
  }
}

eclipse.project.name = 'Galactic Dogfight' + '-parent'
